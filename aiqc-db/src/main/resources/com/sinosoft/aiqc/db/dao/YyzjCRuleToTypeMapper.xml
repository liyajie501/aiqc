<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosoft.aiqc.db.dao.YyzjCRuleToTypeMapper">
  <resultMap id="BaseResultMap" type="com.sinosoft.aiqc.db.domain.YyzjCRuleToType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="rule_type_id" jdbcType="CHAR" property="ruleTypeId" />
    <result column="rule_id" jdbcType="CHAR" property="ruleId" />
  </resultMap>

  <resultMap id="BaseResultMap_B" type="com.sinosoft.aiqc.db.domain.YyzjCRuleToType">
    <result column="rule_type_id" jdbcType="CHAR" property="ruleTypeId" />
    <result column="rule_id" jdbcType="CHAR" property="ruleId" />

    <result column="rule_type_name" jdbcType="VARCHAR" property="ruleTypeName" />
    <result column="rule_type_info" jdbcType="VARCHAR" property="ruleTypeInfo" />
    <result column="rule_type_parent_id" jdbcType="CHAR" property="ruleTypeParentId" />

    <result column="analyzer_id" jdbcType="CHAR" property="analyzerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="publish_user" jdbcType="VARCHAR" property="publishUser" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="publish_mark" jdbcType="CHAR" property="publishMark" />
    <result column="rule_label" jdbcType="CHAR" property="ruleLabel" />
    <result column="delete_mark" jdbcType="CHAR" property="deleteMark" />
    <result column="context_show" jdbcType="VARCHAR" property="contextShow" />
    <result column="type" jdbcType="CHAR" property="type" />

    <result column="dict_id" jdbcType="CHAR" property="dictId" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="dict_parent_id" jdbcType="CHAR" property="dictParentId" />
    <result column="dict_code" jdbcType="CHAR" property="dictCode"/>
  </resultMap>

  <sql id="Base_Column_List_All">
    rt.name rule_type_name,rt.info rule_type_info, rt.parent_id  rule_type_parent_id
    ,rtt.rule_type_id,rtt.rule_id
    ,r.analyzer_id, r.name rule_name, r.info rule_info, r.context,r.publish_mark rule_publish_mark, r.delete_mark rule_delete_mark,r.rule_label,r.context_show rule_context_show
    ,d.dict_id, d.name dict_name, d.parent_id dict_parent_id,d.code dict_code
  </sql>

  <sql id="Base_Column_Rule">
    rule_id, analyzer_id, name, info, context, create_user, create_time, publish_user,
    publish_time, publish_mark, delete_mark,rule_label,type,context_show
  </sql>


  <sql id="Base_Column_RuleType">
    rule_type_id, name , info, parent_id
  </sql>

  <sql id="Base_Column_Rule_Dict">
    d.dict_id, d.name dict_name, d.parent_id dict_parent_id,d.code dict_code,
    r.rule_id, analyzer_id, r.name name, info , context,rule_label,type,context_show
  </sql>

  <sql id="Base_Column_Dict">
    dict_id, name, value, parent_id,code
  </sql>


  <sql id="RuleToType_Where_Clause">
    <where>
      <trim prefix="(" suffix=")" prefixOverrides="and">
        <if test="ruleTypeId != null and ruleTypeId!= ''">
          and rule_type_id = #{ruleTypeId}
        </if>
        <if test="ruleTypePids != null and ruleTypePids.size() > 0">
          and rule_type_id in
          (<foreach collection="ruleTypePids" item="pid" separator="," index="index">
          #{pid}
        </foreach>)
        </if>
        <if test="ruleId != null and ruleId != ''">
          and rule_id = #{ruleId}
        </if>
      </trim>
    </where>
  </sql>

  <sql id="RuleType_Where_Clause">
    <where>
      <trim prefix="(" suffix=")" prefixOverrides="and">
        <if test="ruleTypeId != null and ruleTypeId!= ''">
          and rule_type_id = #{ruleTypeId}
        </if>
        <if test="ruleTypeName != null and ruleTypeName!= ''">
          and name = #{ruleTypeId}
        </if>
        <if test="ruleTypeInfo != null and ruleTypeInfo!= ''">
          and info = #{ruleTypeInfo}
        </if>
        <if test="ruleTypeParentId != null and ruleTypeParentId!= ''">
          and parent_id = #{ruleTypeParentId}
        </if>
      </trim>
    </where>
  </sql>

  <sql id="Rule_Where_Clause">
    <where>
      <trim prefix="(" suffix=")" prefixOverrides="and">
        <if test="analyzerId != null">
          and analyzer_id = #{analyzerId}
        </if>
        <if test="ruleName != null">
          and  name like #{ruleName}
        </if>
        <if test="ruleInfo != null">
          and  info = #{ruleInfo}
        </if>
        <if test="context != null">
          and context = #{context}
        </if>
        <if test="rulePublishMark != null">
          and publish_mark = #{rulePublishMark}
        </if>
        <if test="ruleDeleteMark != null">
          and delete_mark = #{ruleDeleteMark}
        </if>
        <if test="ruleLabel != null">
          and rule_label = #{ruleLabel}
        </if>
        <if test="ruleBuiltinMark != null">
          and builtin_mark = #{ruleBuiltinMark}
        </if>
        <if test="ruleResultType != null">
          and result_type = #{ruleResultType}
        </if>
      </trim>
    </where>
  </sql>



  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    rule_type_id, rule_id
  </sql>


  <select id="selectByExample" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToTypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        rule_type_id, rule_id
      </otherwise>
    </choose>
    from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToTypeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yyzj_c_rule_to_type (rule_type_id, rule_id)
    values (#{ruleTypeId,jdbcType=CHAR}, #{ruleId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into yyzj_c_rule_to_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ruleTypeId != null">
        rule_type_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ruleTypeId != null">
        #{ruleTypeId,jdbcType=CHAR},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToTypeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yyzj_c_rule_to_type
    <set>
      <if test="record.ruleTypeId != null">
        rule_type_id = #{record.ruleTypeId,jdbcType=CHAR},
      </if>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yyzj_c_rule_to_type
    set rule_type_id = #{record.ruleTypeId,jdbcType=CHAR},
      rule_id = #{record.ruleId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToTypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        rule_type_id, rule_id
      </otherwise>
    </choose>
    from yyzj_c_rule_to_type
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>

  <select id="selectByWhereWithRuleAndRuleType" resultMap="BaseResultMap_B" parameterType="com.sinosoft.aiqc.db.domain.YyzjCRuleToType">
    select <include refid="Base_Column_List_All" />
    from
    (select <include refid="Base_Column_List" /> from yyzj_c_rule_to_type
    <include refid="RuleToType_Where_Clause" />
    ) rtt
    left join
    (select <include refid="Base_Column_RuleType" /> from yyzj_c_rule_type
    <include refid="RuleType_Where_Clause" />
    ) rt  on rtt.rule_type_id = rt.rule_type_id
    inner join
    (select <include refid="Base_Column_Rule" /> from yyzj_c_rule
    <include refid="Rule_Where_Clause" />
    ) r  on rtt.rule_id = r.rule_id
    left join (select <include refid="Base_Column_Dict" /> from yyzj_d_sys_dict
    where parent_id=#{dictParentId}) d on r.rule_label = d.value
    group by r.rule_id
  </select>


</mapper>